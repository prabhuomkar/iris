type Album {
  id: String!
  name: String!
  description: String
  thumbnailUrl: String!
  mediaItems(page: Int, limit: Int): MediaItemConnection!
  createdAt: Time!
  updatedAt: Time!
}

type AlbumConnection {
  nodes: [Album!]
  totalCount: Int!
}

input CreateAlbumInput {
  name: String!
  description: String
  mediaItems: [String]
}

input UpdateAlbumInput {
  name: String!
  description: String
}

extend type Query {
  album(id: String!): Album!
  albums(page: Int, limit: Int): AlbumConnection!
}

extend type Mutation {
  createAlbum(input: CreateAlbumInput!): String
  updateAlbum(id: String!, input: UpdateAlbumInput!): Boolean!
  updateAlbumThumbnailUrl(id: String!, mediaItemId: String!): Boolean!
  deleteAlbum(id: String!): Boolean!
  updateAlbumMediaItems(id: String!, type: String!, mediaItems: [String!]!): Boolean!
}
