scalar Upload
scalar Time

type MediaItem {
  id: String!
  description: String!
  imageUrl: String!
  mimeType: String!
  fileName: String!
  fileSize: Int!
  mediaMetadata: MediaMetaData
  contentCategories: [String]
  entities: [Entity!]
  favourite: Boolean
  createdAt: Time!
  updatedAt: Time!
}

type MediaMetaData {
  creationTime: Time
  width: Int
  height: Int
  photo: Photo
  location: Location
}

type Photo  {
  cameraMake: String
  cameraModel: String
  focalLength: Float
  apertureFNumber: Float
  isoEquivalent: Int
  exposureTime: Float
}

type Location {
  latitude: Float
  longitude: Float
}

type Entity {
  id: String!
  name: String!
  imageUrl: String!
  entityType: String!
  mediaItems(page: Int, limit: Int): MediaItemConnection!
}

type ExploreResponse {
  people: [Entity!]
  places: [Entity!]
  things: [Entity!]
}

type MediaItemConnection {
  nodes: [MediaItem!]
  totalCount: Int!
}

type EntityItemConnection {
  nodes: [Entity!]
  totalCount: Int!
}

type AutocompleteResponse {
  id: String!
  name: String!
}

type Album {
  id: String!
  name: String!
  description: String
  mediaItems(page: Int, limit: Int): MediaItemConnection!
  createdAt: Time!
  updatedAt: Time!
}

type AlbumConnection {
  nodes: [Album!]
  totalCount: Int!
}

input CreateAlbumInput {
  name: String!
  description: String
  mediaItems: [String]
}

input UpdateAlbumInput {
  name: String!
  description: String
}

type Query {
  mediaItem(id: String!): MediaItem!
  mediaItems(page: Int, limit: Int): MediaItemConnection!
  search(q: String, id: String, page: Int, limit: Int): MediaItemConnection!
  autocomplete(q: String!): [AutocompleteResponse]
  explore: ExploreResponse!
  entities(entityType: String!, page: Int, limit: Int): EntityItemConnection!
  entity(id: String!): Entity!
  favourites(page: Int, limit: Int): MediaItemConnection!
  album(id: String!): Album!
  albums(page: Int, limit: Int): AlbumConnection!
}

type Mutation {
  upload(file: Upload!): Boolean!
  updateEntity(id: String!, name: String!): Boolean!
  updateFavourite(id: String!, type: String!): Boolean!
  updateDescription(id: String!, description: String!): Boolean!
  createAlbum(input: CreateAlbumInput!): Boolean!
  updateAlbum(id: String!, input: UpdateAlbumInput!): Boolean!
  deleteAlbum(id: String!): Boolean!
}
