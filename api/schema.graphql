scalar Upload
scalar Time

type MediaItem {
  id: String!
  description: String!
  imageUrl: String!
  mimeType: String!
  fileName: String!
  fileSize: Int!
  mediaMetadata: MediaMetaData
  createdAt: Time!
  updatedAt: Time!
}

type MediaMetaData {
  creationTime: String!
  width: Int!
  height: Int!
  photo: Photo
}

type Photo  {
  cameraMake: String
  cameraModel: String
  focalLength: String
  apertureFNumber: String
  isoEquivalent: Int
  exposureTime: String
}

type Entity {
  id: String!
  name: String!
  imageUrl: String!
  entityType: String!
}

type ExploreResponse {
  people: [Entity!]
  places: [Entity!]
  things: [Entity!]
}

type MediaItemConnection {
  nodes: [MediaItem!]
  totalCount: Int!
}

type EntityItemConnection {
  nodes: [Entity!]
  totalCount: Int!
}

type Query {
  mediaItem(id: String!): MediaItem!
  mediaItems(page: Int, limit: Int): MediaItemConnection!
  search(q: String!, page: Int, limit: Int): MediaItemConnection!
  explore: ExploreResponse!
  entities(entityType: String!, page: Int, limit: Int): EntityItemConnection!
  entity(id: String!, page: Int, limit: Int): MediaItemConnection!
}

type Mutation {
  upload(file: Upload!): Boolean!
  updateEntity(id: String!, name: String!): Boolean!
}
